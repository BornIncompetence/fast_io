cmake_minimum_required(VERSION 3.15)

# project(fast_io_examples)
set(CMAKE_FOLDER "examples")

if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 10)
		message(FATAL_ERROR "fast_io no longer supports GCC < 10 version because of incomplete C++ standard library support for concepts lite. Please build the master version of GCC from its official or mirror repo. Or use Visual Studio Preview")
	endif()
endif()

function(example_target FOLDER_NUMBER SOURCE_NAME)
	set(this_target "example_${FOLDER_NUMBER}_${SOURCE_NAME}")

	add_executable(${this_target} "${SOURCE_NAME}.cc" ${ARGN})

	set_target_properties(${this_target} PROPERTIES CXX_EXTENSIONS NO)

	target_compile_features(${this_target} PRIVATE cxx_std_20)
	target_compile_options(${this_target} PRIVATE
		$<$<AND:$<CONFIG:RELEASE>,$<CXX_COMPILER_ID:GNU>>: -s>
		$<$<CXX_COMPILER_ID:GNU>: -ffast-math -Wall -Wextra>
		$<$<CXX_COMPILER_ID:Clang>: -ffast-math -Xclang>
	)
	target_link_libraries(${this_target} fast_io)
endfunction(example_target)

# fast_target(compile "./0000.compile/fast_io.cc")
# fast_target(hw "./0001.helloworld/hw.cc")
# fast_target(hw_u8 "./0001.helloworld/hw_u8.cc")
# if (WIN32)
# 	fast_target(hello_world_win32_box "./0001.helloworld/hello_world_win32_box.cc")
# 	fast_target(utf8_file "./0022.utf/utf8_file.cc")
# endif (WIN32)

# TODO: FIX compilation errors
add_subdirectory(0000.compile)
# add_subdirectory(0001.helloworld)
# add_subdirectory(0002.a+b)
# add_subdirectory(0003.floating_point)
# add_subdirectory(0004.string)
# add_subdirectory(0005.file_io)
# add_subdirectory(0006.datetime)
# add_subdirectory(0007.legacy)
# add_subdirectory(0008.dns)
# add_subdirectory(0009.transmit)
# add_subdirectory(0010.http)
# add_subdirectory(0011.black_hole)
# add_subdirectory(0012.debug)
# add_subdirectory(0013.tcp)
# add_subdirectory(0014.epoll)
# add_subdirectory(0015.udp)
# add_subdirectory(0016.process)
# add_subdirectory(0017.tcp_multiprocess_async)
# add_subdirectory(0018.tcp_thread_pool)
# add_subdirectory(0019.win32)
# add_subdirectory(0020.third_party)
# add_subdirectory(0021.igenerator)
# add_subdirectory(0022.utf)
# add_subdirectory(0023.bound)
# add_subdirectory(0024.locale)
# add_subdirectory(0025.sound)
# add_subdirectory(0026.custom_device)
# add_subdirectory(0027.width)
# add_subdirectory(0028.openssl)
# add_subdirectory(0029.io_file)
# add_subdirectory(0030.c_interface)
# add_subdirectory(0031.win32_memory)
# add_subdirectory(0032.win32_internet)
# add_subdirectory(0033.win32_iocp)
# add_subdirectory(0034.asio)
# add_subdirectory(0035.fast_io_error)
# add_subdirectory(0036.int128)
# add_subdirectory(0037.long_double)
# add_subdirectory(0038.boost_iostreams)
# add_subdirectory(0039.filebuf_file)
# add_subdirectory(0040.eof)
# add_subdirectory(0041.transaction)
# add_subdirectory(0042.text)
# add_subdirectory(0043.iconv)
# add_subdirectory(0044.sha)
# add_subdirectory(0045.iterator)
# add_subdirectory(0046.zlib)
# add_subdirectory(0047.jenkins_hash)
# add_subdirectory(0048.crc)
# add_subdirectory(0049.md5)
# add_subdirectory(0050.gcm)
# add_subdirectory(0051.io_files)
# add_subdirectory(0052.print_reserver)
